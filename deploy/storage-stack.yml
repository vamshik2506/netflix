AWSTemplateFormatVersion: '2010-09-09'
Description: S3 bucket for videos + DynamoDB tables (movies + users)

Parameters:
  EnvironmentName:
    Type: String
    Default: prod
  S3BucketName:
    Type: String
    Description: Unique S3 bucket name for video storage
  KmsKeyArn:
    Type: String
    Description: (Optional) KMS Key ARN for encrypting S3. Leave blank to use S3-managed keys.
    Default: ''

Resources:
  VideoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: Suspended
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: MoveOldToGlacier
            Status: Enabled
            Filter:
              Prefix: ""
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
            NoncurrentVersionTransitions: []
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !If [UseKms, !Ref KmsKeyArn, !Ref "AWS::NoValue"]
    Condition: UseKms

  VideoBucketSSE:
    Type: AWS::S3::Bucket
    Condition: NotUseKms
    Properties:
      BucketName: !Ref S3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # Using Conditions to choose KMS or AES256
Conditions:
  UseKms: !Not [!Equals [!Ref KmsKeyArn, ""]]
  NotUseKms: !Equals [!Ref KmsKeyArn, ""]

  # DynamoDB table for movies
  MoviesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${EnvironmentName}-movies"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: category
          AttributeType: S
        - AttributeName: title
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: category-index
          KeySchema:
            - AttributeName: category
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: title-index
          KeySchema:
            - AttributeName: title
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      SSESpecification:
        SSEEnabled: true

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${EnvironmentName}-users"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      SSESpecification:
        SSEEnabled: true

Outputs:
  VideoBucketName:
    Value: !Ref S3BucketName
    Description: S3 bucket name for video storage
  MoviesTableName:
    Value: !Ref MoviesTable
  UsersTableName:
    Value: !Ref UsersTable
